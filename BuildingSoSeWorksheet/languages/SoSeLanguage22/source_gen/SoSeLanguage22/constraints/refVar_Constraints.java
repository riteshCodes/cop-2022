package SoSeLanguage22.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import java.util.Map;
import org.jetbrains.mps.openapi.language.SReferenceLink;
import jetbrains.mps.smodel.runtime.ReferenceConstraintsDescriptor;
import jetbrains.mps.smodel.runtime.base.BaseReferenceConstraintsDescriptor;
import java.util.HashMap;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class refVar_Constraints extends BaseConstraintsDescriptor {
  public refVar_Constraints() {
    super(CONCEPTS.refVar$H_);
  }

  @Override
  protected Map<SReferenceLink, ReferenceConstraintsDescriptor> getSpecifiedReferences() {
    BaseReferenceConstraintsDescriptor d0 = new BaseReferenceConstraintsDescriptor(LINKS.refTo$fivN, this, false, false) {};
    Map<SReferenceLink, ReferenceConstraintsDescriptor> references = new HashMap<SReferenceLink, ReferenceConstraintsDescriptor>();
    references.put(d0.getReference(), d0);
    return references;
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept refVar$H_ = MetaAdapterFactory.getConcept(0xdfcb7723c3fd4b94L, 0xabab01861ff66059L, 0x3d4b3825e597607aL, "SoSeLanguage22.structure.refVar");
  }

  private static final class LINKS {
    /*package*/ static final SReferenceLink refTo$fivN = MetaAdapterFactory.getReferenceLink(0xdfcb7723c3fd4b94L, 0xabab01861ff66059L, 0x3d4b3825e597607aL, 0x71f899014624146dL, "refTo");
  }
}
