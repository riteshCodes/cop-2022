package SoSeWorksheet.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myIStatementContainer__BehaviorDescriptor = new IStatementContainer__BehaviorDescriptor();
  private final BHDescriptor myClassDefinition__BehaviorDescriptor = new ClassDefinition__BehaviorDescriptor();
  private final BHDescriptor myFunction__BehaviorDescriptor = new Function__BehaviorDescriptor();
  private final BHDescriptor myIf__BehaviorDescriptor = new If__BehaviorDescriptor();
  private final BHDescriptor myForLoop__BehaviorDescriptor = new ForLoop__BehaviorDescriptor();
  private final BHDescriptor myWhileLoop__BehaviorDescriptor = new WhileLoop__BehaviorDescriptor();
  private final BHDescriptor myWorksheet__BehaviorDescriptor = new Worksheet__BehaviorDescriptor();

  public BehaviorAspectDescriptor() {
  }

  @Nullable
  public BHDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    SAbstractConcept cncpt = concept;
    switch (conceptIndex.index(cncpt)) {
      case 0:
        return myClassDefinition__BehaviorDescriptor;
      case 1:
        return myForLoop__BehaviorDescriptor;
      case 2:
        return myFunction__BehaviorDescriptor;
      case 3:
        return myIStatementContainer__BehaviorDescriptor;
      case 4:
        return myIf__BehaviorDescriptor;
      case 5:
        return myWhileLoop__BehaviorDescriptor;
      case 6:
        return myWorksheet__BehaviorDescriptor;
      default:
    }
    return null;
  }
  private static final ConceptSwitchIndex conceptIndex = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0xc0ccb3a7555a492dL, 0x87ab866148bc2243L, 0x2c0acf2a3dfcab54L), MetaIdFactory.conceptId(0xc0ccb3a7555a492dL, 0x87ab866148bc2243L, 0x6094fec7f39a8207L), MetaIdFactory.conceptId(0xc0ccb3a7555a492dL, 0x87ab866148bc2243L, 0x2c0acf2a3dfcac2aL), MetaIdFactory.conceptId(0xc0ccb3a7555a492dL, 0x87ab866148bc2243L, 0x152e385bedc6a8a6L), MetaIdFactory.conceptId(0xc0ccb3a7555a492dL, 0x87ab866148bc2243L, 0x3ef433c29e1b0fceL), MetaIdFactory.conceptId(0xc0ccb3a7555a492dL, 0x87ab866148bc2243L, 0x6094fec7f39bb7bfL), MetaIdFactory.conceptId(0xc0ccb3a7555a492dL, 0x87ab866148bc2243L, 0x72373ee5759225b2L)).seal();
}
